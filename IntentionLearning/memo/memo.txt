[シミュレータの作成法覚書]
	1. MySerialFrame(MyFrameでもいいが最近はもっぱら連続空間が主流)を継承したサブクラスを作成。(クラス名はSampleTask_*_1(s))
	2. MyPRを継承したサブクラスのフィールドを作成
	3. コンストラクタで初期状態の設定。(this.panels[i][j].setStatus(int status)でOK)
	4. functionPluginに適当に追加したい機能を書く。(MyPRサブクラスのインスタンス生成、learnfromLog,reproduction,evaluateのボタンはあった方がいい)




[めも]
	・「ドアが開けられない人を見かけたら、気を利かせてドアを開ける」ロボットを作るには何が必要？
	・「注意すべきポイント」を学習する。（盆栽の見方、運転時の注視点）

[ToDo]
	・識別でランキング
	・識別の評価
	・枝切りの設定
	・枝切りの実装
	・計算回数カウント
	・枝切り評価
	・ガウス誤差を加味したデータセットの自動生成
	・高次なタスクへの応用について
	・想定外の参照点の発想
		→状態空間ベクトルを、状態空間ベクトルのまま学習、再現、識別できる方法があれば行ける
			→「各物体の特徴量を含んだ状態空間ベクトル」って？
				→例えば3次元擬似連続空間なら、（縦、横、高さ、特徴量１、特徴量２、特徴量３、...）とする
					→状態空間ベクトルは１つではなく、NUMBEROFPANEL^3個のベクトル集合とすればいい？

						各観点に、特徴量ベクトルというべつのべくとるを持たせる。
動作の本質は、位置の遷移と状態の遷移の列
→状態の遷移という動作を学習できれば、ピックアンドプレース以外に応用が可能！

どうやってやる？

簡単、PRに「各物体の特徴量を参照する座標系を持つ解析クラス」を作成するだけで良い
位置遷移か状態遷移のいずれかしか起こらないという仮定をおけば、他のPRと同じように最尤推定で解決できる。
→あとは、一つの動作を複数の動作プリミティブとして学習、再現する機構があればいい
→再現自体は複数の動作プリミティブが学習できていれば問題ない、難しそうなのは、「複数とは何個なのか」が未定な状態で学習ができるのかということ。例えば、「青を黄色の上に持ってきたあと、赤を青の右に置く」という動作の場合、基本的には動作プリミティブは二つだが、初期状態の時点で青が黄色の上に存在したら、教示動作は動作プリミティブ一つになるだろう。

今回はとりあえずそれについては無視し、状態遷移とそれを推測するPRの実装方法について考察してみよう


。想定外の参照点について
これは無理でしょう。


特徴量に関する変更は
		/* *************************************************************************************************** */
		/* *************************************************************************************************** */
		この区切りの間に書いてあるもののみ
		/* *************************************************************************************************** */
		/* *************************************************************************************************** */
		場所としては、
		MyPanel
		MyFrame
		MySerialFrame
		にある。

